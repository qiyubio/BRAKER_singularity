BootStrap: docker
From: ubuntu:latest

%labels
	Author:Qi Yu (dryuqi@gmail.com)
%files
        # Downloading GeneMark-ES first, GeneMark requires license key for downloading.
        gmes_linux_64 /opt
        # Downloading twoBitInfo and faToTwoBit into ucsc folder first
        # http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/
        ucsc /opt
%post
	export DEBIAN_FRONTEND="noninteractive" 
	apt-get update
	apt-get -y install perl git python3-pip cpanminus wget build-essential openjdk-8-jdk

	cpanm File::Spec::Functions Hash::Merge List::Util Logger::Simple Module::Load::Conditional Parallel::ForkManager POSIX Scalar::Util::Numeric YAML Math::Utils MCE::Mutex threads File::HomeDir

	# Install dependence
	mkdir -p /opt
	cd /opt
	
	# Install bamtools using apt to avoid path setting in Augustus  
	apt-get -y install bamtools

	# Install ncbi-blast
	apt-get -y install ncbi-blast+
	
	# Install diamond
	wget http://github.com/bbuchfink/diamond/releases/download/v0.9.24/diamond-linux64.tar.gz
	tar xzf diamond-linux64.tar.gz
	cp diamond /usr/local/bin/

	# Install ProtHint
	git clone https://github.com/gatech-genemark/ProtHint
	
	# Install htslib
	apt-get -y install zlib1g-dev libcurl4-openssl-dev liblzma-dev lzma-dev libbz2-dev libssl-dev autoconf 
	git clone https://github.com/samtools/htslib.git
	cd htslib
	autoheader
	autoconf
	./configure 
	make
	make install
	cd /opt
	
	# Install bcftools 
	git clone https://github.com/samtools/bcftools.git
	cd bcftools
	autoheader
	autoconf
	./configure
	make
	make install
	cd /opt
	
	# Install samtools
        apt-get -y install libncurses5-dev
        git clone https://github.com/samtools/samtools.git
        cd samtools
        autoheader
        autoconf -Wno-syntax
        ./configure
        make
        make install
        cd /opt

	# Install Augustus
	# Augustus
        apt-get -y install libboost-iostreams-dev zlib1g-dev libgsl-dev libsuitesparse-dev liblpsolve55-dev libsqlite3-dev libmysql++-dev libbamtools-dev libboost-all-dev
        git clone https://github.com/Gaius-Augustus/Augustus
	cd Augustus
	#define env for build
	export TOOLDIR=/opt
        make
	make install

	cd /opt
	# Install biopython
	pip3 install biopython

	# Install cdbfasta
	apt-get -y install cdbfasta

	# Install Exonerate
	apt-get -y install exonerate

	# Install GenomeThreader
	wget http://genomethreader.org/distributions/gth-1.7.3-Linux_x86_64-64bit.tar.gz
	tar -zxvf gth-1.7.3-Linux_x86_64-64bit.tar.gz

	# Install MakeHub
	wget https://github.com/Gaius-Augustus/MakeHub/archive/1.0.5.tar.gz
	tar -zxvf 1.0.5.tar.gz

        # Install GUSHR
        git clone https://github.com/Gaius-Augustus/GUSHR.git
        # Create GeMoMa-1.6.2.xml.ini file
        java -jar GUSHR/GeMoMa-1.6.2.jar

	# Install BRAKER
	git clone https://github.com/Gaius-Augustus/BRAKER.git
	
	
	# make hpc specific links, you may change the setting according to your cluster
        mkdir -p /gpfs /data /lscratch
        for i in $(seq 1 12); do ln -s /gpfs/gsfs${i} /gs${i}; done
	
	# clean up
	apt-get clean
	rm /opt/*.tar.gz

%environment

	# setting env for braker
	export PATH=/opt/BRAKER/scripts:$PATH
	export LC_ALL=C
	export GENEMARK_PATH=/opt/gmes_linux_64/
	# BRAKER has to write to Augustus_config, so it is moved outside of a container.
	export AUGUSTUS_CONFIG_PATH=~/Augustus/config/
	export AUGUSTUS_BIN_PATH=/opt/Augustus/bin/
	export AUGUSTUS_SCRIPTS_PATH=/opt/Augustus/scripts/
	export PYTHON3_PATH=/usr/bin/
	export SAMTOOLS_PATH=/opt/samtools/
	export DIAMOND_PATH=/opt/
	export PROTHINT_PATH=/opt/ProtHint/bin/
	export MAKEHUB_PATH=/opt/MakeHub-1.0.5/
        export GUSHR_PATH=/opt/GUSHR/

	# setting env for gth
	export PATH=/opt/gth-1.7.3-Linux_x86_64-64bit/bin:$PATH
	export BSSMDIR=/opt/gth-1.7.3-Linux_x86_64-64bit/bin/bssm
	export GTHDATADIR=/opt/gth-1.7.3-Linux_x86_64-64bit/bin/gthdata
        # setting env for twoBitInfo and faToTwoBit
        export PATH=/opt/ucsc:$PATH
